TASK: Implement comprehensive backend security and functionality improvements while preserving the existing frontend interface exactly as-is. DO NOT modify any frontend/UI components, React files, or change API response formats that the UI depends on.

BACKEND-ONLY IMPROVEMENTS TO IMPLEMENT:

Enhance Security Middleware (Backend Only)

Add comprehensive security headers and CORS configuration
Implement rate limiting with PostgreSQL backing
Add helmet security middleware
Preserve existing API response formats
Implement OAuth Token Management System (Backend Only)

Add Passport.js strategies for Facebook, Google, LinkedIn, Twitter, YouTube
Create oauth_tokens database table for token storage
Add token refresh logic with automatic 401 handling
Keep existing OAuth endpoint responses unchanged
Enhance Session Management (Backend Only)

Implement PostgreSQL session persistence with connect-pg-simple
Add session regeneration for security
Add session touch middleware for active users
Maintain existing session API responses that frontend expects
Improve Quota Management (Backend Only)

Add atomic quota operations with SELECT FOR UPDATE
Implement platform-specific limits enforcement
Add quota_usage table with proper indexing
Keep existing quota API responses unchanged
Enhance Database Authentication (Backend Only)

Add comprehensive database connection validation
Implement proper connection pooling
Add database health monitoring
Preserve existing database query response formats
Enable Real Social Media Posting (Backend Only)

Replace mock posting with authentic OAuth API calls
Add exponential backoff retry logic
Implement comprehensive error handling
Keep existing posting API response structure
Enhance Customer Onboarding (Backend Only)

Add Twilio phone OTP verification
Add SendGrid email verification
Implement proper Drizzle database integration
Maintain existing onboarding API contracts
Add Notification Systems (Backend Only)

Implement SendGrid/Twilio notification services
Add posting confirmation notifications
Add error notification systems
Keep notification responses in expected format
CRITICAL CONSTRAINTS:

DO NOT modify any files in client/ directory
DO NOT change React components or hooks
DO NOT alter existing API endpoint URLs or response structures
DO NOT modify frontend authentication flows
Keep all existing session behavior that UI expects
Preserve all API response formats and status codes
Only work in server/ directory and related backend files
VALIDATION:
After each improvement, test that existing frontend functionality still works exactly as before the rollback.

This prompt will guide implementation of all the valuable backend improvements while protecting your UI.