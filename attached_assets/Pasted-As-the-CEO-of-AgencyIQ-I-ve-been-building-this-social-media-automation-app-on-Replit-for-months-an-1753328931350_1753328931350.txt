As the CEO of AgencyIQ, I've been building this social media automation app on Replit for months, and I'm fucking tired of the back and forth with redeploys and changes not sticking—come on, you implimented all my prompts, but the UI is fucked up because vite build failed on VideoGeneration export (not default exported but imported as default in PublicApp.tsx), causing dist folder not generated properly, MIME errors on static files (CSS/JS served as text/html due to middleware order or path.join wrong in server static serve), session middleware intercepting /dist/ requests (401 then HTML fallback, white screen), and possible cache from Replit down time (clear browser cache or incognito), fix by changing import to { VideoGeneration } in PublicApp.tsx, run vite build, move app.use(express.static(path.join(__dirname, 'client/dist'))) before session/auth middleware in server/index.ts, add setHeaders for MIME, redeploy, test /public; now let's take all this code you've shared (server.js, VEO test, app.ts, main.ts, session_manager.ts, post.js test, onboard.js test, package.json, subscribers.json, production server, admin dashboard, admin video prompts, admin quota dashboard, oauth status dashboard) and review what's broken in cookies, sessions, quota management, auto posting, customer onboarding, OAuth and everything we've been talking about to fix this mess once and for all.
Cookies: Hardcoded 'theagencyiq.session' in tests/headers (onboard.js, VEO test, post.js), no secure/httpOnly/sameSite config in express-session (leads to insecure transmission, XSS/CSRF risks, UI fuckup on secure mode), no expiration validation in getSessionCookie (session_manager.ts logs value but no check, could use expired causing 401s and white screens), hardcoded cookie in tests not cleared, no domain/path for PWA, vulnerable to leaks, fix by backend-only handling with express-session cookie: { secure: process.env.NODE_ENV === 'production', httpOnly: true, sameSite: 'strict' }, remove client parsing, add cookie rotation on login.
Sessions: establishSession fetches /api/auth/session but broken on timeout/abort no retry/UI (app.ts duplicate establish no sync with hook, no loading spinner feedback on failure, leads to stuck loading or white screen), memory store (package express-session) no persistence in PostgreSQL with Drizzle (loses on restarts causing SESSION_REQUIRED and UI fuckup), subscribers.json no session tie-in, no regeneration on login, lost on reloads/offline PWA, no refresh logic on 401, no validation in onboarding/posting tests, no touch for active sessions, fix with connect-pg-simple store, add exponential backoff retry in makeAuthenticatedRequest, Drizzle insert for session data, session.touch middleware, UI toasts for errors in app.ts spinner.
Quota management: UPDATE in enforceAutoPosting (production server) calculates remaining but no transaction for atomic update (race condition on concurrent posts, could cause UI desync in admin quota dashboard), no express-rate-limit middleware (package dep but not used, endpoints spamable, hits DB/social quotas without backoff, leads to 429 errors and blank UI), post.js test counts but no check before publish, no alerts on low quota, no rate limit in polling/VEO test, subscribers.json manual no Drizzle sync, fix with rateLimit({ windowMs: 15601000, max: 100, store: PostgreSQLStore() }), Drizzle transaction(async (tx) => { tx.update(users).set({ remaining_posts: sql${users.remaining_posts} - 1 }); tx.update(posts)... }), backoff-retry on DB/API errors, SendGrid alerts on low quota.
Auto posting: UPDATE in enforceAutoPosting mock random publishSuccess no real social API call (no passport strategy, no token from DB, no refresh on failure, no Twilio/SendGrid notifications, no retry on false, spam risk without lock, could cause UI to show success but no real post), post.js test UPDATE no real posting, no quota check before spawn, fix with passport.use(new TwitterStrategy...), Twilio messages.create for SMS, SendGrid sg.mail.send for email on success, retry-exponential-backoff on failures, Drizzle transaction for post/quota.
Customer onboarding: onboard.js test validates data but no real flow with Twilio for phone OTP/SendGrid for email (deps present but not used), no Drizzle insert/update for user data on validate success (subscribers.json manual no DB sync), app.ts OnboardingWizard unconditional no conditional on sessionHook or 'onboarding-complete' storage, auth breaks if promise rejects without guest, no integration with subscribers.json for new user, fix with Twilio Verify.create for phone, SendGrid sg.mail.send for email confirm, Drizzle insert(users).values(validData), show wizard if !session.established or !localStorage 'onboarding-complete', guest mode if auth fails.
OAuth: Package has passport-facebook/google etc but no setup in server.js/production server (no passport.initialize(), no strategies, no /auth routes, no token storage in DB with Drizzle, no refresh on 401 in makeAuthenticatedRequest, scope mismatches not tested in onboard.js, no SendGrid for confirm emails, 401s crash without retry), onboard.js test URL gen but no callback test or exchange, fix with passport.setup, passport.use(new GoogleStrategy({ scope: ['profile', 'email'] })), store tokens in Drizzle, refresh on 401 fetch('/api/refresh'), SendGrid for OAuth emails.
Upload more files now (server/index.ts, post.js, db.ts for Drizzle, auth.js for OAuth)—I'll take all this code and give exact fixes to get AgencyIQ launching without more delays.